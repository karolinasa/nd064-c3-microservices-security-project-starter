Docker Threat Modeling
Given Docker's system components and the STRIDE framework, identify five potential threats that may arise.

Kubernetes Threat Modeling
Given Kubernetes' system components and the STRIDE framework, identify five potential threats that may arise.

Docker-bench Run Results and Analysis
Remediated these weaknesses:
1. [FAIL] 2.2 Ensure network traffic is restricted between containers on the default bridge (Automated)
By default, unrestricted network traffic is enabled between all containers on the same host
on the default network bridge. Thus, each container has the potential of reading all packets
across the container network on the same host. This might lead to an unintended and
unwanted disclosure of information to other containers. Hence, restrict inter-container
communication on the default network bridge.

2. [FAIL] 2.16 Ensure Userland Proxy is Disabled (Automated)
The Docker engine provides two mechanisms for forwarding ports from the host to
containers, hairpin NAT, and the use of a userland proxy. In most circumstances, the
hairpin NAT mode is preferred as it improves performance and makes use of native Linux
iptables functionality instead of using an additional component.

Where hairpin NAT is available, the userland proxy should be disabled on startup to reduce
the attack surface of the installation.

3. [FAIL] 4.5 Ensure Content trust for Docker is Enabled (Automated)
Content trust provides the ability to use digital signatures for data sent to and received
from remote Docker registries. These signatures allow client-side verification of the
identity and the publisher of specific image tags and ensures the provenance of container
images.
